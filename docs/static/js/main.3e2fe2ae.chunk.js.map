{"version":3,"sources":["components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Home.js","components/CharacterDetail.js","components/Footer.js","App.js","services/fetchCharacters.js","index.js"],"names":["Header","className","Filters","props","getName","query","getSpecie","getEpisodes","htmlFor","id","type","onChange","value","placeholder","name","CharacterCard","character","image","species","src","alt","CharacterList","characters","querySpecie","queryEpisode","filter","toUpperCase","includes","episode","length","map","key","to","Home","CharacterDetail","routerProps","ramId","parseInt","match","params","Fragment","item","status","origin","toLowerCase","Footer","href","target","rel","role","aria-label","App","state","bind","this","getCharacters","fetch","then","response","json","data","setState","results","event","currentTarget","prevState","NewSpecie","result","findIndex","push","splice","exact","path","render","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e2fe2ae.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\n\nconst Header = () => {\n\n  return (\n    <header className=\"app-header\">\n      <h1 className=\"header-title\">Rick and Morty</h1>\n    </header> \n  );\n};\n\nexport default Header;","import React from 'react';\nimport './Filters.scss';\nimport PropTypes from 'prop-types';\n\nconst Filters = props => {\n  const { getName , query , getSpecie, getEpisodes } = props;\n\n  return (\n    <div className=\"search-bar\">\n      <p className=\"search-title\">Find your favourite character:</p>\n      <div className=\"search-bar-name\">\n        <label htmlFor=\"input\" className=\"search-label\">By name: </label>\n        <input id=\"input\" type=\"text\" className=\"search-input\" onChange={getName} value={query} placeholder=\"Enter a name\"></input>\n      </div>\n      <div className=\"search-bar-specie\">\n        <p className=\"search-title-specie\">By specie:</p>\n        <label htmlFor=\"inputHuman\" className=\"search-label-checkbox\">\n        Human\n          <input id=\"inputHuman\" type=\"checkbox\" className=\"search-input-cb\" value=\"Human\" onChange={getSpecie}></input>\n        </label>\n        <label htmlFor=\"inputAlien\" className=\"search-label-checkbox\">\n        Alien\n          <input id=\"inputAlien\" type=\"checkbox\" className=\"search-input-cb\" value=\"Alien\" onChange={getSpecie}></input>\n        </label>\n      </div>\n      <div className=\"search-bar-episodes\">\n        <label htmlFor=\"episode\" className=\"search-title-episodes\">By number of episodes:</label>\n          <select id=\"episode\" name=\"episode\" onChange={getEpisodes}>\n            <option value=\"\">Select an option:</option>\n            <option value=\"just 1 episode\" >Just 1 episode</option>\n            <option value=\"more than 1, but less than 15\">More than 1, but less than 15</option>\n            <option value=\"more than 15\">More than 15</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  getName: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  getSpecie: PropTypes.func.isRequired,\n  getEpisodes: PropTypes.func.isRequired,\n};\n\nexport default Filters;","import React from 'react';\nimport './CharacterCard.scss';\nimport PropTypes from 'prop-types';\n\n\nconst CharacterCard = props => {\n  const { character } = props;\n  const { image, name, species } = character;\n\n  return ( \n    <div className=\"character-detail\">\n      <img className=\"character-img\" src={image} alt={name}></img>\n      <h2 className=\"character-name\">Name: {name}</h2>\n      <p className=\"character-specie\">Specie: {species}</p>\n    </div>\n  );\n};\n\nCharacterCard.propTypes = {\n  character: PropTypes.object.isRequired,\n};\n\nexport default CharacterCard;\n\n\n\n\n          \n          \n\n\n","import React from 'react';\nimport './CharacterList.scss';\nimport PropTypes from 'prop-types';\nimport CharacterCard from './CharacterCard';\nimport { Link } from 'react-router-dom';\n\nconst CharacterList = props => {\n  const { characters , query , querySpecie , queryEpisode } = props;\n\n  return (\n    <div className=\"results\">\n      <ol className=\"character-list\">\n        {characters\n        .filter(character => character.name.toUpperCase().includes(query.toUpperCase()))\n\n        .filter(character => {\n          if (queryEpisode === '') {\n            return true;\n          } else if (queryEpisode === 'just 1 episode'){\n            return (\n            character.episode.length === 1\n            );\n          } else if (queryEpisode === 'more than 1, but less than 15'){\n            return (\n            character.episode.length > 1 && character.episode.length < 15 \n            );\n          } else {\n            return (\n            character.episode.length >= 15\n            );\n          }\n        })\n        .filter(character => {\n          if (querySpecie === '' || querySpecie.length > 1) {\n            return true;\n          } else {\n            return (\n            character.species.includes(querySpecie)\n            );\n          }\n        })\n        .map (character => {\n          return (\n            <li className=\"character-item\" key={character.id}>\n              <Link to={`/character-detail/${character.id}`} className=\"character-link\">\n                <CharacterCard \n                  character={character}\n                />\n              </Link>\n            </li>\n        )})\n        }\n      </ol>\n    </div>\n  );\n};\n\nCharacterList.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string.isRequired,\n  querySpecie: PropTypes.arrayOf(PropTypes.string).isRequired,\n  queryEpisode: PropTypes.string.isRequired\n};\n\nexport default CharacterList;\n\n\n\n\n          \n          \n\n\n","import React, { Fragment } from 'react';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport PropTypes from 'prop-types';\n\nconst Home = props => {\n  const { getName , characters , query , getSpecie , querySpecie , queryEpisode , getEpisodes } = props;\n\n  return (\n    <Fragment>\n      <Filters \n        getName = {getName}\n        query = {query}\n        getSpecie = {getSpecie}\n        getEpisodes = {getEpisodes}\n      />\n\n      <CharacterList\n        characters = {characters}\n        query = {query}\n        querySpecie = {querySpecie}\n        queryEpisode = {queryEpisode}\n      />\n    </Fragment>\n  );\n};\n\nHome.propTypes = {\n  getName: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getSpecie: PropTypes.func.isRequired,\n  querySpecie: PropTypes.array.isRequired,\n  getEpisodes: PropTypes.func.isRequired,\n  queryEpisode: PropTypes.string.isRequired\n};\n\nexport default Home;","import React from 'react';\nimport './CharacterDetail.scss';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = props => {\n\n  const { characters, routerProps, } = props;\n  const ramId = parseInt(routerProps.match.params.ramId);\n  \n  if (ramId > characters.length) {\n    return (\n      <React.Fragment>\n        <p className=\"message\">Im sorry, but this character doesn't exists!</p>\n        <Link to=\"/\" className=\"app__back\"> {`< Back to results`} </Link>\n      </React.Fragment>\n    );\n  }\n\n  const character = characters.filter(item => item.id === ramId);\n  if (character[0]) {\n    const {name, image, status, species, origin, episode} = character[0];\n      return (\n      <div className=\"detail__container\">\n          <div className=\"detail\">\n            <div className=\"char-det\">\n              <div className=\"char-det__img\">\n                <img className=\"char-det__img-img\"src={image} alt={name}/>\n              </div>\n              <div className=\"char-det__info\">\n                <h2 className=\"char-det__name\">Name: {name}</h2>\n                <p className= {`char-det__status ${status.toLowerCase()}`}>Status: {status}</p>\n                <p className={`char-det__species ${species.toLowerCase()}`}>Specie: {species}</p>\n                <p className=\"char-det__origin\">Origin: {origin.name}</p>\n                <p className=\"char-det__episodes\">Episodes: {episode.length}</p>\n              </div>\n            </div>\n            <Link to=\"/\" className=\"app__back\">{`< Back`}</Link>\n          </div>\n        </div>\n      );\n} else {\n  return (\n    <React.Fragment>\n      <p className=\"message\">Im sorry, but this character doesn't exists!</p>\n      <Link to=\"/\" className=\"app__back\">{`< Back to results`}</Link>\n    </React.Fragment>\n  );\n}\n}\n\nCharacterDetail.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  routerProps: PropTypes.object.isRequired,\n};\n\nexport default CharacterDetail;","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => {\n\n  return (\n    <footer className=\"app-footer\">\n      <p className=\"footer-title\">Rick and Morty</p>\n      <a href=\"https://github.com/constanza-sosa\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer-copy\"> © Constanza Sosa <span role=\"img\" aria-label=\"Coconut\"> 🥥 </span> 2019 </a>\n    </footer> \n  );\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.scss';\nimport { fetchCharacters } from './services/fetchCharacters'\nimport Header from './components/Header';\nimport Home from './components/Home'\nimport CharaterDetail from './components/CharacterDetail';\nimport Footer from './components/Footer';\nimport { Switch, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        characters: [],\n        query:'',\n        querySpecie: [],\n        queryEpisode: ''\n      };\n  \n    this.getName = this.getName.bind(this)\n    this.getSpecie = this.getSpecie.bind(this)\n    this.getEpisodes = this.getEpisodes.bind(this)\n  }\n\n  componentDidMount(){\n    this.getCharacters()\n  }\n\n  getCharacters() {\n    fetchCharacters()\n      .then(data => {\n        this.setState({\n          characters: data.results,\n        });\n      });\n  }\n\n  getName(event) {\n    const query = event.currentTarget.value;\n      this.setState({ query: query });\n    }\n  getSpecie(event) {\n    const query = event.currentTarget.value;\n    this.setState(prevState => {\n      const NewSpecie = [...prevState.querySpecie];\n      const result = NewSpecie.findIndex(item => item === query);\n\n      if (result < 0 ) {\n        NewSpecie.push(query);\n      } \n      else {\n        NewSpecie.splice(result,1);\n      }\n      return {\n        querySpecie: NewSpecie\n      }\n    });\n  }\n\n  getEpisodes(event){\n    const query = event.currentTarget.value;\n      this.setState({ queryEpisode: query });\n  }\n  render() {\n    const { characters , query , querySpecie , queryEpisode } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Header />\n\n        <main className=\"app-main\">\n          <Switch>\n            <Route exact path=\"/\" render={ () => {\n              return (\n                <Home \n                  characters = {characters}\n                  query = {query}\n                  querySpecie = {querySpecie}\n                  getName = {this.getName}\n                  getSpecie = {this.getSpecie}\n                  queryEpisode = {queryEpisode}\n                  getEpisodes = {this.getEpisodes}\n                />\n              );\n            }} />\n            <Route path=\"/character-detail/:ramId\" render={ routerProps => {\n                return (\n                  <CharaterDetail \n                    routerProps={routerProps}\n                    characters = {characters}\n                  />\n                );\n              }} />\n          </Switch> \n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const endpoint = 'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json';\n\nconst fetchCharacters = () => {\n  return fetch(endpoint)\n  .then(response => response.json());\n};\n\nexport {fetchCharacters};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {HashRouter} from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n<HashRouter>\n  <App />\n</HashRouter>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}