{"version":3,"sources":["components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Home.js","components/CharacterDetail.js","components/Footer.js","App.js","services/fetchCharacters.js","index.js"],"names":["Header","className","Filters","props","getName","query","getSpecie","getEpisodes","getGender","queryGender","htmlFor","id","type","onChange","value","placeholder","name","checked","CharacterCard","character","image","species","src","alt","CharacterList","characters","querySpecie","queryEpisode","filter","toUpperCase","includes","episode","length","gender","map","key","to","Home","CharacterDetail","routerProps","ramId","parseInt","match","params","Fragment","item","status","origin","toLowerCase","Footer","href","target","rel","role","aria-label","App","state","bind","this","getCharacters","fetch","then","response","json","data","setState","results","event","currentTarget","prevState","NewSpecie","result","findIndex","push","splice","exact","path","render","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ba727715.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\n\nconst Header = () => {\n\n  return (\n    <header className=\"app-header\">\n      <h1 className=\"header-title\">Rick and Morty</h1>\n    </header> \n  );\n};\n\nexport default Header;","import React from 'react';\nimport './Filters.scss';\nimport PropTypes from 'prop-types';\n\nconst Filters = props => {\n  const { \n    getName,\n    query,\n    getSpecie, \n    getEpisodes,\n    getGender, \n    queryGender } = props;\n\n  return (\n    <div className=\"search-bar\">\n      <p className=\"search-title\">Find your favourite character:</p>\n      <div className=\"search-bar-name\">\n        <label htmlFor=\"input\" className=\"search-label\">By name: </label>\n        <input id=\"input\" type=\"text\" className=\"search-input\" onChange={getName} value={query} placeholder=\"Enter a name\"></input>\n      </div>\n      <div className=\"search-bar-specie\">\n        <p className=\"search-title-specie\">By specie:</p>\n        <label htmlFor=\"inputHuman\" className=\"search-label-checkbox\">\n        Human\n          <input id=\"inputHuman\" type=\"checkbox\" className=\"search-input-cb\" value=\"Human\" onChange={getSpecie}></input>\n        </label>\n        <label htmlFor=\"inputAlien\" className=\"search-label-checkbox\">\n        Alien\n          <input id=\"inputAlien\" type=\"checkbox\" className=\"search-input-cb\" value=\"Alien\" onChange={getSpecie}></input>\n        </label>\n      </div>\n      <div className=\"search-bar-episodes\">\n        <label htmlFor=\"episode\" className=\"search-title-episodes\">By number of episodes:</label>\n          <select id=\"episode\" name=\"episode\" onChange={getEpisodes} className=\"select\">\n            <option value=\"\">Select an option:</option>\n            <option value=\"just 1 episode\" >Just 1 episode</option>\n            <option value=\"more than 1, but less than 15\">More than 1, but less than 15</option>\n            <option value=\"more than 15\">More than 15</option>\n        </select>\n      </div>\n      <div className=\"search-bar-gender\"> By gender:\n        <div>\n          <label htmlFor=\"genderFemale\">\n            <input\n              id=\"genderFemale\"\n              type=\"radio\"\n              value=\"Female\"\n              name=\"genderFemale\"\n              className=\"input-gender\"\n              checked = {queryGender === 'Female'}\n              onChange = { getGender }\n            />\n            Female\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"genderMale\">\n            <input\n              id=\"genderMale\"\n              type=\"radio\"\n              value=\"Male\"\n              name=\"genderMale\"\n              className=\"input-gender\"\n              checked = {queryGender === 'Male'}\n              onChange = { getGender }\n            />\n            Male\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"genderunknown\">\n            <input\n              id=\"genderunknown\"\n              type=\"radio\"\n              value=\"unknown\"\n              name=\"genderunknown\"\n              className=\"input-gender\"\n              checked = {queryGender === 'unknown'}\n              onChange = { getGender }\n            />\n            unknown\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"genderAll\">\n            <input\n              id=\"genderAll\"\n              type=\"radio\"\n              value=\"all\"\n              name=\"genderAll\"\n              className=\"input-gender\"\n              checked = {queryGender === 'all'}\n              onChange = { getGender }\n            />\n            all\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  getName: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  getSpecie: PropTypes.func.isRequired,\n  getEpisodes: PropTypes.func.isRequired,\n};\n\nexport default Filters;","import React from 'react';\nimport './CharacterCard.scss';\nimport PropTypes from 'prop-types';\n\n\nconst CharacterCard = props => {\n  const { character } = props;\n  const { image, name, species } = character;\n\n  return ( \n    <div className=\"character-detail\">\n      <img className=\"character-img\" src={image} alt={name}></img>\n      <h2 className=\"character-name\">Name: {name}</h2>\n      <p className=\"character-specie\">Specie: {species}</p>\n    </div>\n  );\n};\n\nCharacterCard.propTypes = {\n  character: PropTypes.object.isRequired,\n};\n\nexport default CharacterCard;\n\n\n\n\n          \n          \n\n\n","import React from 'react';\nimport './CharacterList.scss';\nimport PropTypes from 'prop-types';\nimport CharacterCard from './CharacterCard';\nimport { Link } from 'react-router-dom';\n\nconst CharacterList = props => {\n  const { \n    characters,\n    query,\n    querySpecie,\n    queryEpisode,\n    queryGender } = props;\n\n  return (\n    <div className=\"results\">\n      <ol className=\"character-list\">\n        {characters\n        .filter(character => character.name.toUpperCase().includes(query.toUpperCase()))\n\n        .filter(character => {\n          if (queryEpisode === '') {\n            return true;\n          } else if (queryEpisode === 'just 1 episode'){\n            return (\n            character.episode.length === 1\n            );\n          } else if (queryEpisode === 'more than 1, but less than 15'){\n            return (\n            character.episode.length > 1 && character.episode.length < 15 \n            );\n          } else {\n            return (\n            character.episode.length >= 15\n            );\n          }\n        })\n\n        .filter(character => {\n          if (querySpecie === '' || querySpecie.length > 1) {\n            return true;\n          } else {\n            return (\n            character.species.includes(querySpecie)\n            );\n          }\n        })\n\n        .filter(character => {\n          if (queryGender === '' || queryGender === 'all') {\n            return true;\n          } else {\n              return (\n                queryGender === character.gender\n              );\n          } \n        })\n\n        .map (character => {\n          return (\n            <li className=\"character-item\" key={character.id}>\n              <Link to={`/character-detail/${character.id}`} className=\"character-link\">\n                <CharacterCard \n                  character={character}\n                />\n              </Link>\n            </li>\n        )})\n        }\n      </ol>\n    </div>\n  );\n};\n\nCharacterList.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string.isRequired,\n  querySpecie: PropTypes.arrayOf(PropTypes.string).isRequired,\n  queryEpisode: PropTypes.string.isRequired,\n  queryGender: PropTypes.string.isRequired\n};\n\nexport default CharacterList;\n\n\n\n\n          \n          \n\n\n","import React, { Fragment } from 'react';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport PropTypes from 'prop-types';\n\nconst Home = props => {\n  const { \n    getName,\n    characters,\n    query,\n    getSpecie, \n    querySpecie, \n    queryEpisode, \n    getEpisodes, \n    queryGender, \n    getGender } = props;\n\n  return (\n    <Fragment>\n      <Filters \n        getName = {getName}\n        query = {query}\n        getSpecie = {getSpecie}\n        getEpisodes = {getEpisodes}\n        getGender = {getGender}\n        queryGender = {queryGender}\n      />\n\n      <CharacterList\n        characters = {characters}\n        query = {query}\n        querySpecie = {querySpecie}\n        queryEpisode = {queryEpisode}\n        queryGender = {queryGender}\n      />\n    </Fragment>\n  );\n};\n\nHome.propTypes = {\n  getName: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getSpecie: PropTypes.func.isRequired,\n  querySpecie: PropTypes.array.isRequired,\n  getEpisodes: PropTypes.func.isRequired,\n  queryEpisode: PropTypes.string.isRequired,\n  getGender: PropTypes.func.isRequired,\n  queryGender: PropTypes.string.isRequired,\n};\n\nexport default Home;","import React from 'react';\nimport './CharacterDetail.scss';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = props => {\n\n  const { \n    characters, \n    routerProps, } = props;\n  const ramId = parseInt(routerProps.match.params.ramId);\n  \n  if (ramId > characters.length) {\n    return (\n      <React.Fragment>\n        <p className=\"message\">Im sorry, but this character doesn't exists!</p>\n        <Link to=\"/\" className=\"app__back\"> {`< Back to results`} </Link>\n      </React.Fragment>\n    );\n  }\n\n  const character = characters.filter(item => item.id === ramId);\n\n  if (character[0]) {\n    const {\n      name, \n      image, \n      status, \n      species, \n      origin, \n      episode} = character[0];\n\n      return (\n        <div className=\"detail__container\">\n          <div className=\"detail\">\n            <div className=\"char-det\">\n              <div className=\"char-det__img\">\n                <img className=\"char-det__img-img\"src={image} alt={name}/>\n              </div>\n              <div className=\"char-det__info\">\n                <h2 className=\"char-det__name\">Name: {name}</h2>\n                <p className= {`char-det__status ${status.toLowerCase()}`}>Status: {status}</p>\n                <p className={`char-det__species ${species.toLowerCase()}`}>Specie: {species}</p>\n                <p className=\"char-det__origin\">Origin: {origin.name}</p>\n                <p className=\"char-det__episodes\">Episodes: {episode.length}</p>\n              </div>\n            </div>\n            <Link to=\"/\" className=\"app__back\">{`< Back`}</Link>\n          </div>\n        </div>\n      );\n} else {\n  return (\n    <React.Fragment>\n      <p className=\"message\">Im sorry, but this character doesn't exists!</p>\n      <Link to=\"/\" className=\"app__back\">{`< Back to results`}</Link>\n    </React.Fragment>\n  );\n}\n}\n\nCharacterDetail.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  routerProps: PropTypes.object.isRequired,\n};\n\nexport default CharacterDetail;","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => {\n\n  return (\n    <footer className=\"app-footer\">\n      <p className=\"footer-title\">Rick and Morty</p>\n      <a href=\"https://github.com/constanza-sosa\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer-copy\"> © Constanza Sosa <span role=\"img\" aria-label=\"Coconut\"> 🥥 </span> 2019 </a>\n    </footer> \n  );\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.scss';\nimport { fetchCharacters } from './services/fetchCharacters'\nimport Header from './components/Header';\nimport Home from './components/Home'\nimport CharaterDetail from './components/CharacterDetail';\nimport Footer from './components/Footer';\nimport { Switch, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        characters: [],\n        query:'',\n        querySpecie: [],\n        queryEpisode: '',\n        queryGender: 'all'\n      };\n  \n    this.getName = this.getName.bind(this)\n    this.getSpecie = this.getSpecie.bind(this)\n    this.getEpisodes = this.getEpisodes.bind(this)\n    this.getGender = this.getGender.bind(this)\n  }\n\n  componentDidMount(){\n    this.getCharacters()\n  }\n\n  getCharacters() {\n    fetchCharacters()\n      .then(data => {\n        this.setState({\n          characters: data.results,\n        });\n      });\n  }\n\n  getName(event) {\n    const query = event.currentTarget.value;\n      this.setState({ query: query });\n  }\n  \n  getSpecie(event) {\n    const query = event.currentTarget.value;\n    this.setState(prevState => {\n      const NewSpecie = [...prevState.querySpecie];\n      const result = NewSpecie.findIndex(item => item === query);\n\n      if (result < 0 ) {\n        NewSpecie.push(query);\n      } \n      else {\n        NewSpecie.splice(result,1);\n      }\n      return {\n        querySpecie: NewSpecie\n      }\n    });\n  }\n\n  getEpisodes(event){\n    const query = event.currentTarget.value;\n      this.setState({ queryEpisode: query });\n  }\n\n  getGender(event) {\n    const query = event.currentTarget.value;\n      this.setState({ queryGender: query });\n    }\n  render() {\n    const { \n      characters, \n      query, \n      querySpecie, \n      queryEpisode, \n      queryGender } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Header />\n\n        <main className=\"app-main\">\n          <Switch>\n            <Route exact path=\"/\" render={ () => {\n              return (\n                <Home \n                  characters = {characters}\n                  query = {query}\n                  querySpecie = {querySpecie}\n                  getName = {this.getName}\n                  getSpecie = {this.getSpecie}\n                  queryEpisode = {queryEpisode}\n                  getEpisodes = {this.getEpisodes}\n                  queryGender = {queryGender}\n                  getGender = {this.getGender}\n                />\n              );\n            }} />\n            <Route path=\"/character-detail/:ramId\" render={ routerProps => {\n                return (\n                  <CharaterDetail \n                    routerProps={routerProps}\n                    characters = {characters}\n                  />\n                );\n              }} />\n          </Switch> \n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const endpoint = 'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json';\n\nconst fetchCharacters = () => {\n  return fetch(endpoint)\n  .then(response => response.json());\n};\n\nexport {fetchCharacters};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {HashRouter} from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n<HashRouter>\n  <App />\n</HashRouter>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}